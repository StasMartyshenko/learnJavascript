В JavaScript null не является «ссылкой на несуществующий объект» или «нулевым указателем», как в некоторых других языках. Это просто специальное значение, которое имеет смысл «ничего» или «значение неизвестно».
typeof null // "object"– это официально признанная ошибка в языке

undefined «значение не присвоено»
Если переменная объявлена, но в неё ничего не записано, то её значение как раз и есть undefined

Операнд – то, к чему применяется оператор.Другое название: «аргумент оператора»

Унарным называется оператор, который применяется к одному выражению.

Бинарным называется оператор, который применяется к двум операндам. 

Если хотя бы один аргумент является строкой, то второй будет также преобразован к строке!
Это приведение к строке – особенность исключительно бинарного оператора "+".
Остальные арифметические операторы работают только с числами и всегда приводят аргументы к числу.

Инкремент ++ увеличивает на 1
Декремент -- уменьшает на 1

i++ (называется «постфиксная форма») или ++i («префиксная форма»).

Постфиксная форма i++ отличается от префиксной ++i тем, что возвращает старое значение, бывшее до увеличения.
Если результат оператора не используется, а нужно только увеличить/уменьшить переменную – без разницы, какую форму использовать
Если хочется тут же использовать результат, то нужна префиксная форма

var n = 2;
n += 5; // теперь n=7 (работает как n = n + 5)

alert( 0 == false ); // true
alert( '' == false ); // true

Значения null и undefined равны == друг другу и не равны чему бы то ни было ещё. Это жёсткое правило буквально прописано в спецификации языка.
При преобразовании в число null становится 0, а undefined становится NaN.
alert( null > 0 ); // false
alert( null == 0 ); // false
alert(null >= 0); // true

Значение undefined вообще нельзя сравнивать

Вызов prompt возвращает то, что ввёл посетитель – строку или специальное значение null, если ввод отменён.

confirm выводит окно с вопросом question с двумя кнопками: OK и CANCEL.

Результатом будет true при нажатии OK и false – при CANCEL(Esc)

В логическом контексте:
Число 0, пустая строка "", null и undefined, а также NaN являются false,
Остальные значения – true.

|| запинается на «правде»,
&& запинается на «лжи».

Численное преобразование:
undefined	NaN
null	0
true / false	1 / 0
Строка	Пробельные символы по краям обрезаются.
Далее, если остаётся пустая строка, то 0, иначе из непустой строки "считывается" число, при ошибке результат NaN.

